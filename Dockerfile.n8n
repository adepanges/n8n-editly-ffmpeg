# Stage 1: Build with Node.js 18
# FROM node:18.20.8-alpine AS builder

FROM n8nio/n8n:1.100.1

# Switch to root for package installation
USER root

RUN apk update && \
    apk add --no-cache curl \
    bash \
    python3 \
    py3-pip \
    make \
    g++ \
    libstdc++ \
    pkgconfig \
    build-base \
    pixman-dev \
    cairo-dev \
    pango-dev \
    giflib-dev \
    libjpeg-turbo-dev \
    librsvg-dev \
    libxi-dev \
    ffmpeg \
    glew-dev \
    mesa-dev \
    libc-dev \
    mesa-dri-gallium \
    xvfb \
    mesa-gl \
    linux-headers \
    libc6-compat

# Install build dependencies for canvas/OpenGL and Python tools
RUN python3 -m venv /opt/venv && \
    /opt/venv/bin/pip install --upgrade pip setuptools
ENV PATH="/opt/venv/bin:$PATH"

# Install npm packages with build flags
RUN npm install -g --unsafe-perm node-gyp
RUN npm install -g --unsafe-perm gl
RUN npm install -g fluent-ffmpeg @ffmpeg-installer/ffmpeg path fs pkgroll husky typescript ts-node

# Clone your forked editly repo
RUN git clone https://github.com/adepanges/editly.git /opt/editly

# Install editly globally (from local folder)
WORKDIR /opt/editly
RUN npm install && npm run build
RUN npm install -g --unsafe-perm /opt/editly

RUN ln -s /usr/local/lib/node_modules/editly /usr/local/lib/node_modules/n8n/node_modules/editly

# RUN editly --version

# Optional: cleanup
WORKDIR /
# RUN rm -rf /opt/editly

# Switch back to regular user
USER node
